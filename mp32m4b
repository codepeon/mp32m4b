#!/usr/bin/env sh
# Dependencies: coreutils, lame, faac and findutils

error() {
  prg="$(basename "$0")"
  msg="$1"
  echo "$prg: $msg" 1>&2
}

usage() {
  prg="$1"
  echo "A tool to convert mp3 files to one m4b file."
  echo "Takes a list of mp3 files to convert on stdin (absolute paths)."
  echo ""
  echo "Usage: cat <mp3 list> | $prg [options]"
  echo ""
  echo "Help options:"
  echo "    -h    Short help on using $prg"
  echo ""
  echo "Program options:"
  echo "    -a    Author"
  echo "    -b    Book title"
  echo "    -o    Output directory"
  echo ""
  echo "Example:"
  echo "    ls ~/book/**.mp3 | sort -n | $prg -a \"John Doe\" -b \"Seeds\""
}

check_env() {
  nbr=$(for prg in "$@"
    do
      command -v "$prg" || error "Command $prg not found."
    done | wc -l)
  return $(($# - nbr))
}

check_env xargs lame faac || exit 1

AUTHOR="Unkown author"
BOOK="Unkown title"
OUTDIR="$(pwd)"
OUTPUT="/dev/null"
OPTERR=0
while getopts ":a:b:o:hv" option 2>/dev/null
do
  case "$option" in
    a)
      AUTHOR=$OPTARG
      ;;
    b)
      BOOK=$OPTARG
      ;;
    o)
      OUTDIR=$OPTARG
      ;;
    v)
      OUTPUT="/dev/tty"
      ;;
    h)
      usage "$(basename "$0")"
      exit 0;
      ;;
    :)
      error "Invalid option -$OPTARG specified."
      OPTERR=1
      ;;
    ?)
      error "Option -$OPTARG requires an argument."
      OPTERR=1
      ;;
  esac
done
[ $OPTERR -ne 0 ] && exit 1

if [ ! -d "$OUTDIR" ]
then
  error "Output directory does not exist."
  exit 1
fi

if ! xargs -I % -n 1 lame  -h --mp3input --decode % - 2>$OUTPUT | \
  faac --artist "$AUTHOR" --album "$BOOK" \
  --ignorelength -w -q 80 -o "$OUTDIR/$AUTHOR-$BOOK.m4b" - 2>$OUTPUT
then
  error "Command exited with error, run with -v for more info."
  exit 1
fi
